<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
/**
 * Copyright Â© 2014 EMBL - European Bioinformatics Institute
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License.  
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


    <!-- The configuration for your 'PhenotypeArchive' Dispatcher Servlet. This
        example uses component scanning to automatically pick up controllers. It
        allow us to use @Autowire, @Required and @Qualifier annotations. - Dependencies
        of controllers are wired using @Autowired support. - The URI scheme is controller
        using @RequestMapping annotations -->

<!--
    <mvc:resources mapping="/css/**" location="/resources/css/" />
    <mvc:resources mapping="/js/**" location="/resources/js/" />
    <mvc:resources mapping="/img/**" location="/resources/img/" />
    <mvc:resources mapping="/documentation/**" location="/resources/documentation/" />
    -->

    <context:component-scan base-package="uk.ac.ebi.emma" />

    <!-- <mvc:annotation-driven/> use this if you don't need extra converters -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    
    <!-- An interceptor which keeps a hibernate session open to allow lazy
        loading of form backing objects -->
<!--
    <mvc:interceptors>
        <bean
         class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory" ref="sessionFactory" />
        </bean>
    </mvc:interceptors>
-->
    <!-- if you would not have used component scanning you would have had to
        wire up the controller yourself: <bean class="uk.ac.ebi.phenotype.web.controller.LabcodeController">
        <constructor-arg ref="labcodeDAO"/> </bean> -->

    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

</beans> 
